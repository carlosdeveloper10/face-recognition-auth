pipeline {
    agent {
        label 'docker-agent'
    }
    
    environment {
        CI_TOOLS = '/home/ci-tools'
    }
    
	stages {
	    
	    stage('Unit test') {
		    steps {
		        dir("app"){
	    	   		sh 'mvn test'
	    	   		junit 'target/surefire-reports/TEST-*xml'
	   	    	}
		    }
    	}
    	
		stage('SonarQube analysis') {
			steps {
				dir("app"){
					withSonarQubeEnv('sonarQubeServer') {
							//sh '${scannerHome}/bin/sonar-scanner'
						sh '${CI_TOOLS}/sonnar-scanner/sonar-scanner-3.3.0.1492-linux/bin/sonar-scanner'
					}
					timeout(time: 1, unit: 'HOURS') {
		            	waitForQualityGate abortPipeline: true
		            }
				 }
			 }
		}
		
		stage('RESTful integration test'){
			steps {
				dir("app"){
					sh 'mvn spring-boot:run -Dspring-boot.run.arguments=--port=8085,--dburl=jdbc:postgresql://ec2-174-129-224-157.compute-1.amazonaws.com:5432/dbd47u60jcgd3o,--dbusername=suinkegzkmwilh,--dbpassword=bd78e8b0150ba0c00146cff94fca57e5cbf0799149c42322110237aec363cbcb'	    
				}
				dir("test"){
				    sh 'mvn test -Dserver.port=8085'
				}
			}
		}

		stage('Deploy on stage'){
			parallel {
			    stage('Deploy on Dev') {
                   when {
                       branch 'develop'
                   }
					steps{
						sh 'mvn package' 
					    sh 'eb deploy FaceRecognitionAuthDev-env'
					}
                }
                
                stage('Deploy on Qa') {
                   when {
                       branch 'release/*'
                   }
					steps{
						sh 'mvn package' 
						sh 'eb deploy FaceRecognitionAuthDev-qa'
					}
                }
                
                stage('Deploy on Pro') {
                   when {
                       branch 'master'
                   }
				   steps{
				   		sh 'mvn package' 
					    sh 'eb deploy FaceRecognitionAuthDev-pro'
				   }
                }
			}
		}	
	}
}//Pipeline end

