pipeline {
    agent {
        label 'linux-mint'
    }


	stages {
		stage('Show agent machine info and status') {
			steps {
			    sh 'echo list of enviromet variables'
			    sh 'env'
			    
			    sh 'echo agent machine attributes'
			    sh 'lscpu'
			    sh 'free -h'
			    sh 'dmesg | head -1'
			}
		   
		}

	    stage('Run unit test') {
    	   steps {
    	   		sh 'mvn test'
   	    	}
    	}
	
	stage('SonarQube analysis') {
		    steps {
			withSonarQubeEnv('sonarServer') {
			
				sh '/opt/jenkins/ci-tools/sonarqube-scanner/bin/sonar-scanner -Dsonar.projectKey=fra -Dsonar.sources=src -Dsonar.java.binaries=target/classes'
			    
			}
			
			def qualitygate = waitForQualityGate()
			      if (qualitygate.status != "OK") {
				 error "Pipeline aborted due to quality gate coverage failure: ${qualitygate.status}"
			      }
		    }
		}
		
			
          }
	
	}
	
	
	post {
	    always {
    	    junit 'target/surefire-reports/TEST-*xml'
    	}
	}
}
